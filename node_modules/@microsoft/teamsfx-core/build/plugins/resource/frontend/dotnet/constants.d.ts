export declare class Constants {
    static readonly emptyString = "";
}
export declare class AzureInfo {
    static readonly zipDeployURL: (appName: string) => string;
}
export declare class RegularExpr {
    static readonly targetFramework: RegExp;
    static readonly clientId: RegExp;
    static readonly clientSecret: RegExp;
    static readonly oauthAuthority: RegExp;
    static readonly botId: RegExp;
    static readonly botPassword: RegExp;
}
export declare class DotnetPluginInfo {
    static readonly pluginName = "fx-resource-dotnet";
    static readonly displayName = "Dotnet";
    static readonly alias = "DN";
    static readonly issueLink = "https://github.com/OfficeDev/TeamsFx/issues/new";
    static readonly helpLink = "https://aka.ms/teamsfx-bz-help";
    static readonly defaultFramework = "net6.0";
    static readonly defaultRuntime = "win-x86";
}
export declare class DotnetPathInfo {
    static readonly publishFolderPath: (workingPath: string, framework?: string, runtime?: string) => string;
    static readonly bicepTemplateFolder: (templateFolder: string) => string;
    static readonly projectFilename: (projectName: string) => string;
    static readonly indexPath = "";
    static readonly appSettingDevelopment = "appsettings.Development.json";
    static readonly oauthHost: (tenantId: string) => string;
}
export declare class DotnetCommands {
    static readonly buildRelease: (runtime: string) => string;
}
export declare class DependentPluginInfo {
    static readonly solutionPluginName = "solution";
    static readonly subscriptionId = "subscriptionId";
    static readonly resourceGroupName = "resourceGroupName";
    static readonly aadClientId: string;
    static readonly aadClientSecret: string;
    static readonly botId: string;
    static readonly botPassword: string;
    static readonly appTenantId: string;
}
export declare class DotnetConfigInfo {
    static readonly webAppName = "webAppName";
    static readonly appServicePlanName = "appServicePlanName";
    static readonly webAppEndpoint = "endpoint";
    static readonly webAppDomain = "domain";
    static readonly projectFilePath = "projectFilePath";
    static readonly indexPath = "indexPath";
}
export declare class Capability {
    static readonly tab = "Tab";
    static readonly bot = "Bot";
}
export declare class WebappBicepFile {
    static readonly configurationTemplateFileName = "webappConfiguration.template.bicep";
    static readonly provisionTemplateFileName = "webappProvision.template.bicep";
}
export declare class WebappBicep {
    static readonly endpoint = "provisionOutputs.webappOutput.value.endpoint";
    static readonly resourceId = "provisionOutputs.webappOutput.value.resourceId";
    static readonly domain = "provisionOutputs.webappOutput.value.domain";
    static readonly endpointAsParam = "webappProvision.outputs.endpoint";
    static readonly domainAsParam = "webappProvision.outputs.domain";
    static readonly Reference: {
        webappResourceId: string;
        endpoint: string;
        domain: string;
        endpointAsParam: string;
        domainAsParam: string;
    };
}
export declare class AppSettingsPlaceholders {
    static readonly clientId = "$clientId$";
    static readonly clientSecret = "$client-secret$";
    static readonly oauthAuthority = "$oauthAuthority$";
    static readonly botId = "$botId$";
    static readonly botPassword = "$bot-password$";
}
//# sourceMappingURL=constants.d.ts.map